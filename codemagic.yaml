workflows:
  ios-native-workflow:
    name: iOS Native
    max_build_duration: 120
    integrations:
      app_store_connect: FirstKey
    environment:
      ios_signing:
        distribution_type: app_store
        bundle_identifier: com.esinnur
      vars:
        BUNDLE_ID: "com.esinnur"
        XCODE_PROJECT: "CineGorilla.xcodeproj"
        XCODE_SCHEME: "CineGorilla"
        APP_STORE_APPLE_ID: 6743405380
        TEAM_ID: "K3827AC47X"
      xcode: 16.0
    scripts:
      - name: Налаштування автоматичного підписування
        script: |
          echo "Налаштування проекту для автоматичного підписування..."
          cd "$CM_BUILD_DIR"
          # Змінюємо налаштування підписування в проекті
          sed -i '' "s/CODE_SIGN_STYLE = Manual;/CODE_SIGN_STYLE = Automatic;/g" "$XCODE_PROJECT/project.pbxproj" || true
          sed -i '' "s/PROVISIONING_PROFILE_SPECIFIER = FirstProf;/PROVISIONING_PROFILE_SPECIFIER = \"\";/g" "$XCODE_PROJECT/project.pbxproj" || true
          
          # Налаштування для notificationsvc (розширення пуш-повідомлень)
          TARGETS=$(xcodebuild -project "$XCODE_PROJECT" -list | grep "Targets:" -A 100 | grep -v "Targets:" | grep -v "^$" | sed 's/^ *//')
          echo "Знайдені цілі: $TARGETS"
          
          for TARGET in $TARGETS; do
            echo "Налаштування підписування для цілі: $TARGET"
            xcrun xcodebuild -project "$XCODE_PROJECT" -target "$TARGET" \
              DEVELOPMENT_TEAM="$TEAM_ID" \
              CODE_SIGN_STYLE=Automatic \
              CODE_SIGN_IDENTITY="Apple Development" \
              PROVISIONING_PROFILE_SPECIFIER="" || true
          done

      - name: Синхронізація версій додатку та розширень
        script: |
          cd "$CM_BUILD_DIR"
          # Отримати версію основного додатку
          MAIN_VERSION=$(xcrun agvtool what-marketing-version -terse1 | head -n 1)
          echo "Версія основного додатку: $MAIN_VERSION"
          
          # Оновити Info.plist для всіх знайдених розширень та цілей
          find . -name "Info.plist" -type f -exec plutil -replace CFBundleShortVersionString -string "$MAIN_VERSION" {} \;
          echo "Версії були оновлені у всіх файлах Info.plist до $MAIN_VERSION"

      - name: Increment build number
        script: |
          cd "$CM_BUILD_DIR"
          LATEST_BUILD_NUMBER=$(app-store-connect get-latest-app-store-build-number "$APP_STORE_APPLE_ID")
          echo "Останній номер збірки в App Store: $LATEST_BUILD_NUMBER"
          NEW_BUILD_NUMBER=$(($LATEST_BUILD_NUMBER + 1))
          echo "Новий номер збірки: $NEW_BUILD_NUMBER"
          agvtool new-version -all $NEW_BUILD_NUMBER
          echo "Номер збірки після інкременту:"
          agvtool what-version

      - name: Build ipa for distribution
        script: |
          echo "Початок збірки IPA з автоматичним підписуванням..."
          xcode-project build-ipa \
            --project "$CM_BUILD_DIR/$XCODE_PROJECT" \
            --scheme "$XCODE_SCHEME" \
            --use-auto-signing \
            --verbose
          
          # Збереження статусу виконання
          BUILD_STATUS=$?
          
          # Якщо збірка не вдалася, спробуємо отримати більше інформації
          if [ $BUILD_STATUS -ne 0 ]; then
            echo "Збірка не вдалася, спроба отримати детальні логи..."
            
            # Спроба отримати детальний лог збірки
            xcodebuild -project "$CM_BUILD_DIR/$XCODE_PROJECT" -scheme "$XCODE_SCHEME" \
              -archivePath build/ios/xcarchive/CineGorilla.xcarchive archive \
              CODE_SIGN_STYLE=Automatic \
              DEVELOPMENT_TEAM="$TEAM_ID" \
              -allowProvisioningUpdates \
              -verbose > /tmp/verbose_build_log.txt 2>&1
            
            echo "Помилки та попередження збірки:"
            grep -E "error:|warning:" /tmp/verbose_build_log.txt | tail -n 50
            
            # Додати лог до артефактів
            mkdir -p /tmp/xcodebuild_logs
            cp /tmp/verbose_build_log.txt /tmp/xcodebuild_logs/
            
            # Повертаємо статус помилки
            exit $BUILD_STATUS
          fi

    artifacts:
      - build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log
      - /tmp/verbose_build_log.txt
      - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.app
      - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
      - $HOME/Library/Developer/Xcode/DerivedData/Logs/Build/*.log
      - $HOME/Library/Logs/CoreSimulator/*.log

    publishing:
      email:
        recipients:
          - fassy363@gmail.com
        notify:
          success: true
          failure: true
      app_store_connect:
        auth: integration
        submit_to_testflight: false
        submit_to_app_store: false
